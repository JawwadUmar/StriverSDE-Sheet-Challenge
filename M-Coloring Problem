bool safe(int node, vector<vector<int>> &mat, int n, int color[], int c){
    //adjacents of node shouldn't be colored with c

    for(int i=0; i<n; i++){
        if(i!=node && mat[i][node] ==1 && color[i] ==c){
            return false;
        }
    }

    return  true;
}

bool solve(int node, vector<vector<int>> &mat, int n, int m, int color[]){
    if(node ==n){
        return true;
    }

    for(int i=1; i<=m; i++){
        
        if(safe(node, mat, n, color, i)){
            color[node] = i;
            if(solve(node+1, mat, n, m, color)){
                return true;
            }
           color[node] = 0;
        }
    }

    return false;
}

string graphColoring(vector<vector<int>> &mat, int m) {
    int n = mat.size();
    int color[n] = {0};
    
    if(solve(0, mat, n, m, color)){
        return "YES";
    }

    return "NO";
}
