#include <bits/stdc++.h>
using namespace std;

bool check(int row, int col, vector<vector<int>> &board){
    int x = row;
    int y = col;
    int n = board.size();

    //r-1 c-1
    while(x>=0 && y>=0){
        if(board[x][y] ==1){
            return false;
        }

        x--;
        y--;
    }

    x = row;
    y = col;

    while(x<n && y>=0){
        if(board[x][y] ==1){
            return false;
        }

        x++;
        y--;
    }

    return true;
}

void f (int col, vector<vector<int>> &board, int vis[], vector<vector<int>> &res){

    int n = board.size();
    if(col == board.size()){
        //content of board in res
        vector<int> ds;
        for(int i=0; i<board.size(); i++){
            for(int j=0; j<board.size(); j++){
                ds.push_back(board[i][j]);
            }
        }

        res.push_back(ds);
        return;
    }

    for(int i=0; i<n; i++){
        if(vis[i] ==0){
            if(check(i, col, board)){
                board[i][col] = 1;
                vis[i] = 1;
                f(col+1, board, vis, res);
                board[i][col] = 0;
                vis[i] = 0;

            }
        }
    }
}


vector<vector<int>> solveNQueens(int n) {
    // Write your code here.
    vector<vector<int>> board (n, vector<int>(n, 0));
    vector<vector<int>> res;
    int vis[n] = {0};

    f(0, board, vis, res);

    return res;

}
