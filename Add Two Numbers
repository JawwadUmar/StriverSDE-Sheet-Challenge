/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node *addTwoNumbers(Node *num1, Node *num2)
{
    // Write your code here.
    if(num1 == NULL && num2 ==NULL){
        return NULL;
    }

    if(num1 ==NULL){
        return num2;
    }

    if(num2 ==NULL){
        return num1;
    }


    Node* dummy = new Node(-1);
    Node* tail = dummy;
    int rem = 0;

    while(num1 && num2){
        int x1 = num1->data;
        int x2 = num2->data;
        int d = (x1+x2+rem);

        Node* y = new Node(d%10);

        rem = d/10;
        // cout<<rem<<endl;
        tail->next = y;
        tail = y;

        num1 = num1->next;
        num2 = num2->next;
    }

    if(num2){
        swap(num1, num2);
    }

    while(num1){
        int x1 = num1->data;
        int d = x1+rem;
        rem = d/10;

        Node* y = new Node(d%10);
        tail->next = y;
        tail = y;

        num1 = num1->next;

    }

    if(rem){
        Node* y = new Node(rem);
        tail->next = y;
        tail = y;
    }

    return  dummy->next;

}
