#include <bits/stdc++.h>

int f(int n, int arr[], vector<int> &res){
    if(n ==0){
        return 0;
    }

    res.push_back(arr[0]);

    for(int i=1; i<n; i++){
        if(arr[i] > res.back()){
            res.push_back(arr[i]);
        }

        else{
            int idx = lower_bound(res.begin(), res.end(), arr[i]) - res.begin();
            res[idx] = arr[i];
        }
    }

    return res.size();
}

int longestIncreasingSubsequence(int arr[], int n)
{
    // Write Your Code here
    vector<int> res;
    return f(n, arr, res);
}
