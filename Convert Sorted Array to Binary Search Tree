/*
 * @lc app=leetcode id=108 lang=cpp
 *
 * [108] Convert Sorted Array to Binary Search Tree
 */

// @lc code=start
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

TreeNode* sortedArrayToBST(int left, int right, vector<int>& nums){

    if(left > right){
        return NULL;
    }

    int mid = (left+right)/2;
    TreeNode* x = new TreeNode (nums[mid]);

    x ->left = sortedArrayToBST(left, mid-1, nums);
    x ->right = sortedArrayToBST(mid+1, right, nums);

    return x;

}

    TreeNode* sortedArrayToBST(vector<int>& nums) {
        
        return sortedArrayToBST(0, nums.size()-1, nums);
    }
};
// @lc code=end

