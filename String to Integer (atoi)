class Solution {
public:
    int myAtoi(string s) {
        int i = 0;
        while(s[i] ==' '){
            i++;
        }
        s= s.substr(i);
        // cout<<s<<endl;

        if(!isdigit(s[0]) && s[0]!='-' && s[0] != '+'){
            return 0;
        }
        // cout<<"hehe"<<endl;

        i = 0;
        int n= s.size();
        if(s[i] =='+' || s[i] =='-'){
            i++;
        }
        while(i<n && isdigit(s[i])){
            i++;
        }
        long long int res = 0;
        n = i;
        int k = 0;
        // cout<<INT_MAX;

        for(int i = n-1; i>=0; i--){
            if(isdigit(s[i])){
                int digit = s[i] -'0';
                if(res>INT_MAX || (k>9 && digit!=0)){
                    return s[0] =='-' ? INT_MIN: INT_MAX;
                }
                res+= digit* pow(10, k);
                k++;
            }
        }

         if(res>INT_MAX){
            return s[0] =='-' ? INT_MIN: INT_MAX;
            }

        // cout<<"gg"<<endl;
        if(s[0] =='-'){
            res*=-1;
        }

        return (int)res;
    }
};
