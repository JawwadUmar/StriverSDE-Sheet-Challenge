/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 class info{
    public:

    bool isBST;
    int sum;
    int mx;
    int mn;
};
class Solution {
public:

    info solve(TreeNode* root, int &res){
        if(root ==NULL){
            return {1, 0, INT_MIN, INT_MAX};
            // return {1, 0, INT_MAX, INT_MIN};
        }

        info currNode;
        info l = solve(root->left, res);
        info r = solve(root->right, res);

        currNode.sum= root->val + l.sum + r.sum;
        currNode.mx = max(root->val, r.mx);
        currNode.mn = min(root->val, l.mn);

        if(l.isBST && r.isBST && root->val > l.mx && root->val < r.mn){
            currNode.isBST = true;
            res = max(res,currNode.sum);
        }

        else{
            currNode.isBST = false;
        }

        return currNode;
    }
    int maxSumBST(TreeNode* root) {
        int res = 0;

        info temp = solve(root, res);

        return res;
    }
};
